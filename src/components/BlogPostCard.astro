---
interface Props {
  post: {
    slug: string;
    data: {
      pubDate: Date;
      category?: string;
      title: string;
      description?: string;
      tags?: string[];
    };
  };
}

const { post } = Astro.props;
---

<article class="group py-8 first:pt-0 last:border-b-0 border-b border-gray-200">
  <div class="space-y-4">
    <div class="flex items-center gap-3 text-sm text-gray-600">
      <time datetime={post.data.pubDate.toISOString()}>
        {post.data.pubDate.toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        })}
      </time>
      {post.data.category && (
        <>
          <span class="text-gray-300">â€¢</span>
          <span class="font-medium text-gray-700">{post.data.category}</span>
        </>
      )}
    </div>
    
    <h2 class="text-2xl font-bold tracking-tight text-gray-900">
      <a 
        href={`/blog/${post.slug}`} 
        class="relative group-hover:text-blue-600 transition-colors duration-200"
      >
        <span class="bg-gradient-to-r from-blue-600 to-blue-600 bg-[length:0px_2px] group-hover:bg-[length:100%_2px] bg-left-bottom bg-no-repeat transition-[background-size] duration-300">
          {post.data.title}
        </span>
      </a>
    </h2>
    
    {post.data.description && (
      <p class="text-gray-600 leading-relaxed">{post.data.description}</p>
    )}
    
    {post.data.tags && (
      <div class="flex gap-2 flex-wrap pt-2">
        {post.data.tags.map((tag: string) => (
          <a
            href={`/tags/${tag.toLowerCase()}`}
            class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors duration-200"
          >
            #{tag}
          </a>
        ))}
      </div>
    )}
  </div>
</article>

<style>
  article:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }
  
  article:first-child {
    padding-top: 0;
  }
</style>