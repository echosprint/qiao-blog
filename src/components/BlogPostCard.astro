---
interface Props {
  post: {
    slug: string;
    data: {
      pubDate: Date;
      category?: string;
      title: string;
      description?: string;
      tags?: string[];
    };
  };
}

const { post } = Astro.props;
---

<article class="border-b border-gray-200 pb-8">
  <div class="mb-2">
    <time class="text-gray-500 text-sm">
      {post.data.pubDate.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      })}
    </time>
    {post.data.category && (
      <span class="ml-2 text-sm text-gray-500">{post.data.category}</span>
    )}
  </div>
  
  <h2 class="text-2xl font-semibold mb-2">
    <a href={`/blog/${post.slug}`} class="hover:text-blue-600 transition-colors">
      {post.data.title}
    </a>
  </h2>
  
  {post.data.description && (
    <p class="text-gray-600 mb-4">{post.data.description}</p>
  )}
  
  {post.data.tags && (
    <div class="flex gap-2 flex-wrap">
      {post.data.tags.map((tag: string) => (
        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-sm">
          {tag}
        </span>
      ))}
    </div>
  )}
</article>

<style>
  article:last-child {
    border-bottom: none;
  }
</style> 