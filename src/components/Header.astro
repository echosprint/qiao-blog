---
import Navigation from './Navigation.astro';

const currentPath = Astro.url.pathname;
const isBlogPage = currentPath.startsWith('/qiao-blog/blog') || currentPath.startsWith('/qiao-blog/tags');
---

<header class="fixed top-0 left-0 right-0 z-50 bg-gray-100/20 dark:bg-black/20 backdrop-blur-md shadow-[0_1px_2px_0_rgba(0,0,0,0.03)] dark:shadow-[0_1px_2px_0_rgba(255,255,255,0.03)] transition-transform duration-300" id="main-header">
    <div class="max-w-4xl mx-auto flex items-center justify-between px-6">
        <a href="/qiao-blog/" class="flex items-center hover:opacity-80 transition-opacity py-4">
            {isBlogPage ? (
                <span class="text-lg font-medium dark:text-white">Qiao's Blog</span>
            ) : (
                <img src="/qiao-blog/logo.svg" alt="Qiao's Logo" class="w-8 h-8" />
            )}
        </a>
        <Navigation />
    </div>
</header>

<script>
    function initHeaderBehavior() {
        const header = document.getElementById('main-header');
        if (!header) return;

        // Reset header position
        header.style.transform = 'translateY(0)';
        
        let lastScrollY = window.scrollY;
        let ticking = false;

        const updateHeader = () => {
            const currentScrollY = window.scrollY;

            // Show header at the top of the page
            if (currentScrollY < 50) {
                header.style.transform = 'translateY(0)';
            }
            // Show header when scrolling up
            else if (currentScrollY < lastScrollY) {
                header.style.transform = 'translateY(0)';
            }
            // Hide header when scrolling down
            else {
                header.style.transform = 'translateY(-100%)';
            }

            lastScrollY = currentScrollY;
            ticking = false;
        };

        // Remove existing event listeners if any
        const scrollHandler = () => {
            if (!ticking) {
                window.requestAnimationFrame(updateHeader);
                ticking = true;
            }
        };

        const mouseHandler = (e: MouseEvent) => {
            if (e.clientY <= 60) {
                header.style.transform = 'translateY(0)';
            }
        };

        window.addEventListener('scroll', scrollHandler, { passive: true });
        document.addEventListener('mousemove', mouseHandler, { passive: true });

        // Handle cleanup
        return () => {
            window.removeEventListener('scroll', scrollHandler);
            document.removeEventListener('mousemove', mouseHandler);
        };
    }

    // Initialize on page load
    let cleanup = initHeaderBehavior();

    // Re-initialize on view transitions
    document.addEventListener('astro:page-load', () => {
        if (cleanup) cleanup();
        cleanup = initHeaderBehavior();
    });

    // Cleanup on page unload
    document.addEventListener('astro:before-preparation', () => {
        if (cleanup) cleanup();
    });
</script> 