---
import { getCollection } from 'astro:content';
import BlogLayout from '../../layouts/BlogLayout.astro';
import BlogPostCard from '../../components/BlogPostCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => !data.draft && !data.private);
  
  // Get all unique tags
  const tags = [...new Set(posts.flatMap(post => post.data.tags || []))];
  
  // Create a path for each tag
  return tags.map(tag => {
    const filteredPosts = posts.filter(post => 
      post.data.tags && post.data.tags.map(t => t.toLowerCase()).includes(tag.toLowerCase())
    ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()); // Sort by date, newest first
    
    return {
      params: { tag: tag.toLowerCase() },
      props: { tag, posts: filteredPosts },
    };
  });
}

const { tag, posts } = Astro.props;
---

<BlogLayout title={`#${tag} | Qiao's Blog`}>
  <div class="max-w-2xl mx-auto px-2 sm:px-4 py-12">
    <div class="mb-12">
      <span class="text-sm text-gray-500 dark:text-gray-400">{posts.length} post{posts.length === 1 ? '' : 's'} tagged with</span>
      <h1 class="text-2xl font-medium mt-1 text-gray-900 dark:text-white">#{tag}</h1>
    </div>

    <div class="space-y-16">
      {posts.map((post) => (
        <BlogPostCard post={post} />
      ))}
    </div>
    
    {posts.length === 0 && (
      <p class="text-gray-700 dark:text-gray-200">No posts found with this tag.</p>
    )}
  </div>
</BlogLayout> 